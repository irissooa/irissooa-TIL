
#box {
    background-color: #00f;
    width: 300px;
    height: 300px;
    color: #fff;

    // :: 콜론 두개를 입력 
    // before, after이 두 요소를 pseudo element라고 함
    // 해당요소의 앞과 뒤에 가상의 요소 앞(before)과 뒤(after)에 추가
    &::before { // 처음에 어떤 내용을 추가
        content: "before"; // 내용
        display: block; // display속성을 block으로 줌
    }
    &::after { // 마지막에 어떤 내용을 추가
        content: "after"; // 내용
        display: block; // block으로 지정(한줄)
        background-color: #ff0;
    }
}

// float됐을 때 부모가 자식 영역이 없다고 생각해서 영역의 크기가 줄어드는 것을 방지하기 위해 clearfix 처리를 한다()
@mixin clearfix() {
    // 해당요소의 마지막에 가상의 element를 추가
    &::after {
        content: '';
        display: block;
        // 부모가 다시 자식영역까지 인지하고 영역높이를 맞추게 됨
        clear: left;
    }
}

.box-parent {

    padding: 20px;
    background-color: #00f;

    .box-child {
        width: 200px;
        height: 200px;
        background-color: #f00;
        border: 1px solid #ff0; // 테두리
        float: left; // box-child가 left로 뜬상태(float)로 정렬 -> 부모(box-parent)는 자식이 떠서 영역이 없다고 생각해서 영역이 줄어듦
    }
    // margin을 줄때 마지막요소를 제외하고 줌(마지막은 margin이 적용안해도됨)
    // ':last-child' 가상요소 이용 -> 마지막 요소 
    // :not 제외할때 사용
    .box-child:not(:last-child) {
        margin-right: 40px;
    }

    @include clearfix();
}